datalight:
  service:
    name: KUBESPHERE
    version: 3.3.2
    tgz: dlc-kubesphere-3.3.2.tar.gz
    conf-dirs:
#      - service-conf-dir: '{{SERVICE_DIR}}/KUBESPHERE/conf'
#        templated-dir: '{{DATALIGHT_DIR}}/plugins/KUBESPHERE/templated/conf'

#      - service-conf-dir: '{{SERVICE_DIR}}/KUBESPHERE/bin'
#        templated-dir: '{{DATALIGHT_DIR}}/plugins/KUBESPHERE/templated/bin'

# TODO FOR TEST
      - service-conf-dir: '{{SERVICE_DIR}}/KUBESPHERE/conf'
        templated-dir: 'D:/datalight/plugins/KUBESPHERE/templated/conf'

      - service-conf-dir: '{{SERVICE_DIR}}/KUBESPHERE/bin'
        templated-dir: 'D:/datalight/plugins/KUBESPHERE/templated/bin'

    config-event-handler-jar: 'plugins-kubesphere-1.0.0.jar'
    config-event-handler-clazz: 'cn.boundivore.dl.plugin.kubesphere.config.event.ConfigEventHandler'

    initialize:
      steps:
        - type: COMMON_SCRIPT
          name: '清理过期的部署环境'
          shell: 'service-remove.sh'
          args: [ ]
          interactions: [ ]
          exits: '0'
          timeout: 10000
          sleep: 0

        - type: COMMON_SCRIPT
          name: '初始化部署服务所需的环境'
          shell: 'service-init-env.sh'
          args: [ ]
          interactions: [ ]
          exits: '0'
          timeout: 60000
          sleep: 0

        - type: JAR
          name: '初始化服务配置文件'
          jar: 'plugins-kubesphere-1.0.0.jar'
          clazz: 'cn.boundivore.dl.plugin.kubesphere.config.ConfigKubesphere'
          args: [ ]
          interactions: [ ]
          exits: '0'
          sleep: 0

    components:
      - name: Harbor
        priority: 1
        max: 1
        min: 1
        mutexes: [ ]
        actions:
          - type: DEPLOY
            start-state: DEPLOYING
            success-state: STARTED
            fail-state: SELECTED
            steps:
              - type: SCRIPT
                name: '初始化 Harbor'
                shell: 'init-harbor-setup.sh'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: 300000
                sleep: 1000

              - type: SCRIPT
                name: '创建 Harbor 公共项目'
                shell: 'init-harbor-project.sh'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: 300000
                sleep: 1000

          - type: START
            steps:
              - type: SCRIPT
                name: '启动 Harbor'
                shell: 'kubesphere-operation.sh'
                args: [ 'Harbor', 'start' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: STOP
            steps:
              - type: SCRIPT
                name: '停止 Harbor'
                shell: 'kubesphere-operation.sh'
                args: [ 'Harbor', 'stop' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: RESTART
            steps:
              - type: SCRIPT
                name: '重启 Harbor'
                shell: 'kubesphere-operation.sh'
                args: [ 'Harbor', 'restart' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

      - name: K8S
        priority: 2
        max: 1
        min: 1
        mutexes: [ ]
        actions:
          - type: DEPLOY
            start-state: DEPLOYING
            success-state: STARTED
            fail-state: SELECTED
            steps:
              - type: SCRIPT
                name: '初始化 K8S 集群'
                shell: 'init-k8s-setup.sh'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: 300000
                sleep: 1000

              - type: SCRIPT
                name: '暴露 ks-apiserver'
                shell: 'init-k8s-ks-apiserver.sh'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: 300000
                sleep: 1000

              - type: SCRIPT
                name: '修改 KubeSphere 密码'
                shell: 'init-k8s-change-password.sh'
                args: [ '2wsx@WSX' ]
                interactions: [ ]
                exits: '0'
                timeout: 300000
                sleep: 1000

          - type: START
            steps:
              - type: SCRIPT
                name: '启动 K8S'
                shell: 'kubesphere-operation.sh'
                args: [ 'K8S', 'start' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: STOP
            steps:
              - type: SCRIPT
                name: '停止 K8S'
                shell: 'kubesphere-operation.sh'
                args: [ 'K8S', 'stop' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: RESTART
            steps:
              - type: SCRIPT
                name: '重启 K8S'
                shell: 'kubesphere-operation.sh'
                args: [ 'K8S', 'restart' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000