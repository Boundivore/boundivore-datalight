datalight:
  service:
    name: MINIO
    version: 20241218
    tgz: dlc-minio-20241218.tar.gz
    conf-dirs:
      - service-conf-dir: '{{SERVICE_DIR}}/MINIO/bin'
        templated-dir: '{{DATALIGHT_DIR}}/plugins/MINIO/templated/bin'

      - service-conf-dir: '{{SERVICE_DIR}}/MINIO/conf'
        templated-dir: '{{DATALIGHT_DIR}}/plugins/MINIO/templated/conf'

    #       TODO FOR TEST
    #      - service-conf-dir: '{{SERVICE_DIR}}/MINIO/bin'
    #        templated-dir: 'D:/datalight/plugins/MINIO/templated/bin'
    #
    #      - service-conf-dir: '{{SERVICE_DIR}}/MINIO/config'
    #        templated-dir: 'D:/datalight/plugins/MINIO/templated/config'

    config-event-handler-jar: 'plugins-minio-1.0.0.jar'
    config-event-handler-clazz: 'cn.boundivore.dl.plugin.minio.config.event.ConfigEventHandler'

    initialize:
      steps:
        - type: COMMON_SCRIPT
          name: '清理 MINIO 过期的部署环境'
          shell: 'service-remove.sh'
          args: [ ]
          interactions: [ ]
          exits: '0'
          timeout: 10000
          sleep: 0

        - type: COMMON_SCRIPT
          name: '初始化部署 MINIO 服务所需的环境'
          shell: 'service-init-env.sh'
          args: [ ]
          interactions: [ ]
          exits: '0'
          timeout: 60000
          sleep: 0

        - type: JAR
          name: '初始化 MINIO 服务配置文件'
          jar: 'plugins-minio-1.0.0.jar'
          clazz: 'cn.boundivore.dl.plugin.minio.config.ConfigMINIO'
          args: [ ]
          interactions: [ ]
          exits: '0'
          sleep: 0

    components:
      - name: MinIOServer
        priority: 1
        max: -1
        min: 3
        mutexes: [ ]
        dependencies: [ ]
        actions:
          - type: DEPLOY
            start-state: DEPLOYING
            success-state: STARTED
            fail-state: SELECTED
            steps:
              - type: SCRIPT
                name: '部署后启动 MinIOServer'
                shell: 'minio-operation.sh'
                args: [ 'MinIOServer', 'start' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: START
            start-state: STARTING
            success-state: STARTED
            fail-state: STOPPED
            steps:
              - type: SCRIPT
                name: '启动 MinIOServer'
                shell: 'minio-operation.sh'
                args: [ 'MinIOServer', 'start' ]
                interactions: [ ]
                exits: '0'
                sleep: 1000

          - type: STOP
            start-state: STOPPING
            success-state: STOPPED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '停止 MinIOServer'
                shell: 'minio-operation.sh'
                args: [ 'MinIOServer', 'stop' ]
                interactions: [ ]
                exits: '0'
                sleep: 1000

          - type: RESTART
            start-state: RESTARTING
            success-state: STARTED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '重启 MinIOServer'
                shell: 'minio-operation.sh'
                args: [ 'MinIOServer', 'restart' ]
                interactions: [ ]
                exits: '0'
                sleep: 1000

          - type: ENABLE_RANGER_PLUGIN
            start-state: STARTED
            success-state: STARTED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '启用 ranger-minio-plugin 插件'
                shell: 'ranger-plugin-switch.sh'
                args: [ 'enable', 'MINIO' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: DISABLE_RANGER_PLUGIN
            start-state: STARTED
            success-state: STARTED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '禁用 ranger-minio-plugin 插件'
                shell: 'ranger-plugin-switch.sh'
                args: [ 'disable', 'MINIO' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000


      - name: MinIOClient
        priority: 2
        max: -1
        min: 0
        mutexes: [ ]
        dependencies: [ ]
        actions:
          - type: DEPLOY
            start-state: DEPLOYING
            success-state: STARTED
            fail-state: SELECTED
            steps:
              - type: COMMAND
                name: '正在完成 MinIOClient 部署'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                sleep: 0

          - type: START
            start-state: STARTING
            success-state: STARTED
            fail-state: STOPPED
            steps:
              - type: COMMAND
                name: '启动 MinIOClient'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: '0'
                sleep: 0

          - type: STOP
            start-state: STOPPING
            success-state: STOPPED
            fail-state: STARTED
            steps:
              - type: COMMAND
                name: '停止 MinIOClient'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: '0'
                sleep: 0

          - type: RESTART
            start-state: RESTARTING
            success-state: STARTED
            fail-state: STOPPED
            steps:
              - type: COMMAND
                name: '重启 MinIOClient'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: '0'
                sleep: 0