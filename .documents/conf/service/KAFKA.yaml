datalight:
  service:
    name: KAFKA
    version: 2.6.0
    tgz: dlc-kafka-2.6.0.tar.gz
    conf-dirs:
      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/exporter/conf'
        templated-dir: '{{DATALIGHT_DIR}}/plugins/KAFKA/templated/exporter/conf'

      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/bin'
        templated-dir: '{{DATALIGHT_DIR}}/plugins/KAFKA/templated/bin'

      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/config'
        templated-dir: '{{DATALIGHT_DIR}}/plugins/KAFKA/templated/config'

      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/ranger-kafka-plugin'
        templated-dir: '{{DATALIGHT_DIR}}/plugins/KAFKA/templated/ranger-kafka-plugin'

#       TODO FOR TEST
#      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/exporter/conf'
#        templated-dir: 'D:/datalight/plugins/KAFKA/templated/exporter/conf'
#
#      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/bin'
#        templated-dir: 'D:/datalight/plugins/KAFKA/templated/bin'
#
#      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/config'
#        templated-dir: 'D:/datalight/plugins/KAFKA/templated/config'
#
#      - service-conf-dir: '{{SERVICE_DIR}}/KAFKA/ranger-kafka-plugin'
#        templated-dir: 'D:/datalight/plugins/KAFKA/templated/ranger-kafka-plugin'


    config-event-handler-jar: 'plugins-kafka-1.0.0.jar'
    config-event-handler-clazz: 'cn.boundivore.dl.plugin.kafka.config.event.ConfigEventHandler'

    initialize:
      steps:
        - type: COMMON_SCRIPT
          name: '清理过期的部署环境'
          shell: 'service-remove.sh'
          args: [ ]
          interactions: [ ]
          exits: '0'
          timeout: 10000
          sleep: 0

        - type: COMMON_SCRIPT
          name: '初始化部署服务所需的环境'
          shell: 'service-init-env.sh'
          args: [ ]
          interactions: [ ]
          exits: '0'
          timeout: 60000
          sleep: 0

        - type: JAR
          name: '初始化服务配置文件'
          jar: 'plugins-kafka-1.0.0.jar'
          clazz: 'cn.boundivore.dl.plugin.kafka.config.ConfigKAFKA'
          args: [ ]
          interactions: [ ]
          exits: '0'
          sleep: 0

    components:
      - name: KafkaBroker
        priority: 1
        max: -1
        min: 3
        mutexes: [ ]
        dependencies: [ ]
        actions:
          - type: DEPLOY
            start-state: DEPLOYING
            success-state: STARTED
            fail-state: SELECTED
            steps:
              - type: SCRIPT
                name: '部署后启动 KafkaBroker'
                shell: 'kafka-operation.sh'
                args: [ 'KafkaBroker', 'start' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: START
            start-state: STARTING
            success-state: STARTED
            fail-state: STOPPED
            steps:
              - type: SCRIPT
                name: '启动 KafkaBroker'
                shell: 'kafka-operation.sh'
                args: [ 'KafkaBroker', 'start' ]
                interactions: [ ]
                exits: '0'
                sleep: 1000

          - type: STOP
            start-state: STOPPING
            success-state: STOPPED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '停止 KafkaBroker'
                shell: 'kafka-operation.sh'
                args: [ 'KafkaBroker', 'stop' ]
                interactions: [ ]
                exits: '0'
                sleep: 1000

          - type: RESTART
            start-state: RESTARTING
            success-state: STARTED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '重启 KafkaBroker'
                shell: 'kafka-operation.sh'
                args: [ 'KafkaBroker', 'restart' ]
                interactions: [ ]
                exits: '0'
                sleep: 1000

          - type: ENABLE_RANGER_PLUGIN
            start-state: STARTED
            success-state: STARTED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '启用 ranger-kafka-plugin 插件'
                shell: 'ranger-plugin-switch.sh'
                args: [ 'enable', 'KAFKA' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000

          - type: DISABLE_RANGER_PLUGIN
            start-state: STARTED
            success-state: STARTED
            fail-state: STARTED
            steps:
              - type: SCRIPT
                name: '禁用 ranger-kafka-plugin 插件'
                shell: 'ranger-plugin-switch.sh'
                args: [ 'disable', 'KAFKA' ]
                interactions: [ ]
                exits: '0'
                timeout: 60000
                sleep: 1000


      - name: KafkaClient
        priority: 2
        max: -1
        min: 0
        mutexes: [ ]
        dependencies: [ ]
        actions:
          - type: DEPLOY
            start-state: DEPLOYING
            success-state: STARTED
            fail-state: SELECTED
            steps:
              - type: COMMAND
                name: '正在完成 KafkaClient 部署'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                sleep: 0

          - type: START
            start-state: STARTING
            success-state: STARTED
            fail-state: STOPPED
            steps:
              - type: COMMAND
                name: '启动 KafkaClient'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: '0'
                sleep: 0

          - type: STOP
            start-state: STOPPING
            success-state: STOPPED
            fail-state: STARTED
            steps:
              - type: COMMAND
                name: '停止 KafkaClient'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: '0'
                sleep: 0

          - type: RESTART
            start-state: RESTARTING
            success-state: STARTED
            fail-state: STOPPED
            steps:
              - type: COMMAND
                name: '重启 KafkaClient'
                shell: 'echo done'
                args: [ ]
                interactions: [ ]
                exits: '0'
                timeout: '0'
                sleep: 0